{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/taskManager/frontend/src/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Container from \"./container\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setFormData(prevData => ({\n      ...prevData,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => res.json()).then(data => console.log(\"data from server:\", data)).catch(Error => console.log(`Error : ${Error}`));\n  };\n  const form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign up a new account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      closec: \"hidden\",\n      conclass: \"container\",\n      action: () => {},\n      content: form\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(SignUp, \"QUxIULOrx5GiotSldTbAbda+pjk=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","formData","setFormData","email","password","handleChange","e","prevData","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","Error","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","closec","conclass","action","content","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/taskManager/frontend/src/SignUp.jsx"],"sourcesContent":["import React, {\n  useState\n} from \"react\";\nimport Container from \"./container\";\n\nconst SignUp = () => {\n  const [formData,\n    setFormData] = useState( {\n      email: \"\",\n      password: \"\"\n    })\n  const handleChange = (e)=> {\n    setFormData((prevData)=> (\n      {\n        ...prevData,\n        [e.target.name]: e.target.value,\n      }\n\n    )\n    )}\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/signup\",\n      {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)}\n    ).then(res => res.json()).then(data => console.log(\"data from server:\", data)).catch(Error => console.log(`Error : ${Error}`))}\n\n\n  const form = <form onSubmit={handleSubmit}>\n    <h3>Sign up a new account</h3>\n    <label>\n      Email address\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n  </label>\n  <br />\n<label>\n  Password:\n  <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n</label>\n<br />\n<label>\nConfirm Password:\n<input type=\"password\" />\n</label>\n<button type=\"submit\">Submit</button>\n\n</form>\n\nreturn <>\n<Container closec=\"hidden\" conclass=\"container\" action={() => {}} content={form} />\n</>\n}\n\nexport default SignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}