{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\final inshaallah\\\\projects\\\\task-manager-app\\\\frontend\\\\src\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Container from \"./container\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [confirmP, setConfirmP] = useState(\"\");\n  const handleChange = e => {\n    setFormData(prevData => ({\n      ...prevData,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password === confirmP) {\n      try {\n        const res = await fetch(\"http://localhost:4000/sign-up\", {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: 'include',\n          body: JSON.stringify(formData)\n        });\n        const data = await res.json();\n        console.log(\"data from server:\", data);\n        navigate(`/home/${data.id}`);\n      } catch (err) {\n        console.log(`Error : can't fetch submit${err}`);\n      }\n      ;\n    } else alert(\"you better match it! BITCH\");\n  };\n  const form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign up a new account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmP,\n        onChange: e => {\n          setConfirmP(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 18\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      closec: \"hidden\",\n      conclass: \"container\",\n      action: () => {},\n      content: form\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(SignUp, \"dtYPeZlFjUr9LXxcTDH2jtPv/Ac=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","navigate","formData","setFormData","email","password","confirmP","setConfirmP","handleChange","e","prevData","target","name","value","handleSubmit","preventDefault","res","fetch","method","headers","credentials","body","JSON","stringify","data","json","console","log","id","err","alert","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","closec","conclass","action","content","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/final inshaallah/projects/task-manager-app/frontend/src/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from \"./container\";\r\n\r\nconst SignUp = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [formData,\r\n        setFormData] = useState({\r\n            email: \"\",\r\n            password: \"\"\r\n        })\r\n\r\n    const [confirmP, setConfirmP] = useState(\"\")\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormData((prevData) => (\r\n            {\r\n                ...prevData,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n\r\n        )\r\n        )\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (formData.password === confirmP) {\r\n           try {const res = await fetch(\"http://localhost:4000/sign-up\",\r\n                {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    credentials:'include',\r\n                    body: JSON.stringify(formData)\r\n                }\r\n            );\r\n            const data = await res.json();\r\n                console.log(\"data from server:\", data);\r\n                navigate(`/home/${data.id}`)\r\n            }\r\n\r\n            catch(err){console.log(`Error : can't fetch submit${err}`)};\r\n        }\r\n          \r\n        else (alert(\"you better match it! BITCH\"))\r\n    }\r\n\r\n\r\n    const form = <form onSubmit={handleSubmit}>\r\n        <h3>Sign up a new account</h3>\r\n        <label>\r\n            Email address\r\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n            Password:\r\n            <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n            Confirm Password:\r\n            <input type=\"password\" value={confirmP} onChange={(e) => { setConfirmP(e.target.value) }} />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n\r\n    </form>\r\n\r\n    return <>\r\n        <Container closec=\"hidden\" conclass=\"container\" action={() => { }} content={form} />\r\n    </>\r\n}\r\n\r\nexport default SignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}